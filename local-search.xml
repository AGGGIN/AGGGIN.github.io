<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Mac上的便签</title>
    <link href="/2021/06/10/Mac%E4%B8%8A%E7%9A%84%E4%BE%BF%E7%AD%BE/"/>
    <url>/2021/06/10/Mac%E4%B8%8A%E7%9A%84%E4%BE%BF%E7%AD%BE/</url>
    
    <content type="html"><![CDATA[<p>之前一直觉得这个应用很没有存在感，因为苹果自带的记笔记的软件就蛮多的。而我自己又会下载很多第三方应用来记录各类文字，笔记、创作、规划、灵感、想法甚至编程，都各不相同。<span id="more"></span></p><p>比如，先博客文章和文档我用的是Typora/Quiver，有时候也用VSCode。编程大项目用的是IDEA，小项目、刷题和demo用的还是VSCode。手机/ipad上编程的机会就很少了，一般就是刷题和写一些脚本用的是JSBox。记录灵感用和规划用的是滴答清单，如果是用手机/ipad打草稿、选词会用Taio。可以看出每个应用在各自的平台和擅长的领域各司其职，那便签还有什么应用场景没有覆盖到呢？</p><h3 id="文本编辑、备忘录、便签"><a href="#文本编辑、备忘录、便签" class="headerlink" title="文本编辑、备忘录、便签"></a>文本编辑、备忘录、便签</h3><p>这三个都是Mac自带的应用，他们都有啥区别呢？</p><p>文本编辑有点类似于window的记事本，可以用来格式化富文本，不过我用的比较少，短的文本直接在alfred粘贴剪切就好了，长的文本一般是代码，编辑器也不许你用那么花哨的富文本。</p><p>备忘录功能就多了，支持MarkDown而且多端同步数据，iPad这次15的更新更是对用笔的用户很友好，但是我还是没怎么用起来，主要自己写画太丑了。</p><p>便签支持富文本并且有一个最大的优点，就是窗口可以浮动在最前面。<br>这可太有用了，比如我最近在尝试学习双拼提升自己的打字速度，这篇文章就是用双拼码的。码表我至今还是背不熟。刚开始学双拼的时候想用便签纸抄了一遍，打字的时候好对着敲。抄到一半，一是觉得太久没写字了抄的不好看，二是实体便签如果固定粘在笔记本触控板旁边的托盘上，我的手容易挡住，粘在其他地方次数多了容易掉。就想PC上有没有类似便签的应用，结果发现了便签这一神器完美地解决了我的需求。</p><p><img src="https://pan-1253226899.cos.ap-hongkong.myqcloud.com/images/20210620015145.png" alt="小鹤双拼x便签"></p>]]></content>
    
    
    <categories>
      
      <category>神神叨叨</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从零开始配置一台服务器</title>
    <link href="/2021/06/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2021/06/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="修改hostname"><a href="#修改hostname" class="headerlink" title="修改hostname"></a>修改hostname</h2><p>拿到服务器默认会给你一个很随机的hostname，那么第一步首先是修改hostname，其实只要多窗口的时候你分得清你在哪一台服务器上操作就可以了， 我的习惯一般是地区-系统，比如HK-Debian。因为CentOS红帽不维护了，所以最近转用Debian，顺便记录一下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname HK-Debian<br></code></pre></td></tr></table></figure><p>修改的hostname不会立刻生效需要重启一下，但是不着急重启，可以把免密登录昨晚再重启这样就不用再输入一遍账号密码了。</p><h2 id="免密登录"><a href="#免密登录" class="headerlink" title="免密登录"></a>免密登录</h2><p>首先先要在本地生成公钥私钥</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 创建密钥</span><br>ssh-keygen -t rsa<br><br><span class="hljs-meta"># 如果没有添加注释，创建时会使用本机名，系统会生产公钥文件</span><br>cat ~/.ssh/id_rsa.pub<br><br><span class="hljs-meta"># 添加注释可以添加参数-C</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;注释内容&quot;</span><br></code></pre></td></tr></table></figure><p>然后把生成的公钥粘贴到服务器上的<code>~/.ssh/authorized_keys</code>里。</p><h2 id="修改ssh的登录端口"><a href="#修改ssh的登录端口" class="headerlink" title="修改ssh的登录端口"></a>修改ssh的登录端口</h2><p>用<code>lastb</code>命令可以看出每天都有人尝试在用ssh远程登录你的服务器，修改ssh默认端口是一个很常用的做法，</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 修改sshd_config里的Port</span><br>vim <span class="hljs-regexp">/etc/</span>ssh/sshd_config<br><br><span class="hljs-comment"># 把登录失败的记录清除掉</span><br>echo &gt; <span class="hljs-regexp">/var/</span>log/btmp<br><br><span class="hljs-comment"># 把登录成功的记录也清除掉</span><br>echo &gt; <span class="hljs-regexp">/var/</span>log/wtmp<br><br></code></pre></td></tr></table></figure><h2 id="更新软件"><a href="#更新软件" class="headerlink" title="更新软件"></a>更新软件</h2><p>如果你不是不更新不舒服斯基，用<code>apt update</code>看看有什么软件需要更新，针对性的更新就可以了。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">apt <span class="hljs-meta">update</span> <span class="hljs-variable">&amp;&amp;</span> apt upgrade<br></code></pre></td></tr></table></figure><h2 id="安装常用的软件"><a href="#安装常用的软件" class="headerlink" title="安装常用的软件"></a>安装常用的软件</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>基本上按着<a href="https://docs.docker.com/engine/install/debian/">参考文档</a>来就可以了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 卸载旧版本的Docker</span><br>apt-get remove docker docker-engine docker.io containerd runc<br><br><span class="hljs-comment"># 安装一些依赖包</span><br>apt-get install \<br>    apt-transport-https \<br>    ca-certificates \<br>    curl \<br>    gnupg \<br>    lsb-release<br>    <br><span class="hljs-comment"># 添加Docker的官方密钥</span><br>curl -fsSL https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/</span>debian<span class="hljs-regexp">/gpg | gpg --dearmor -o /u</span>sr<span class="hljs-regexp">/share/</span>keyrings/docker-archive-keyring.gpg<br><br><span class="hljs-comment"># 设置稳定版的源</span><br>echo \<br>  <span class="hljs-string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \</span><br><span class="hljs-string">  $(lsb_release -cs) stable&quot;</span> | tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>docker.list &gt; <span class="hljs-regexp">/dev/</span>null<br>  <br><span class="hljs-comment"># 更新</span><br>apt update<br><br><span class="hljs-comment"># 安装</span><br>apt install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p><a href="https://git-scm.com/download/linux">参考文档</a></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs smali">apt install software-properties-common<span class="hljs-built_in"></span><br><span class="hljs-built_in">add-apt-repository </span>ppa:git-core/ppa<br>apt update<br>apt install git<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
